---
- name: Install utility programs for webservers
  apt:
    name: apache2-utils
  when: static_website_htpassword_protected is defined and static_website_htpassword_protected|bool == true

- name: Disable default server
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  notify: Restart nginx

- name: Intall passlib
  apt:
    name: python-passlib
  when: static_website_htpassword_protected is defined and static_website_htpassword_protected|bool == true

- name: Clone provided repository
  git:
    dest: "{{ static_website_destination_path }}"
    repo: "{{ static_website_git_repo }}"
    accept_hostkey: yes
    force: yes
    version: "{{ static_website_git_version }}"
  become: false
  notify: Restart nginx

- name: Protect the website by htpassword
  htpasswd:
    path: "{{ static_website_destination_path }}/.htpassword"
    name: "{{ static_website_htlogin }}"
    password: "{{ static_website_htpassword }}"
    owner: "{{ host_remote_user }}"
    group: "{{ host_remote_user }}"
    mode: 0640
  when: static_website_htpassword_protected is defined and static_website_htpassword_protected|bool == true
  notify: Restart nginx

- name: Install application dependencies with Yarn
  command: yarn install
  args:
    chdir: "{{ static_website_destination_path }}"
  when: static_website_build_command is defined and (static_website_dependencies_prod_only is undefined or static_website_dependencies_prod_only|bool == false)
  become: false

- name: Install application production only dependencies with NPM
  command: npm install --only=prod
  args:
    chdir: "{{ static_website_destination_path }}"
  when: static_website_build_command is defined and static_website_dependencies_prod_only is defined and static_website_dependencies_prod_only|bool == true
  become: false

- name: Build application
  command: npm run {{ static_website_build_command }}
  args:
    chdir: "{{ static_website_destination_path }}"
  when: static_website_build_command is defined and static_website_build_command != 'none'
  become: false

- name: Configure nginx server
  template:
    src: "{{ (static_website_htpassword_protected is defined and static_website_htpassword_protected|bool == true) | ternary('nginx_server_restricted.j2','nginx_server.j2') }}"
    dest: "/etc/nginx/sites-available/{{ website_url }}"

- name: Enable nginx server
  file:
    src: "/etc/nginx/sites-available/{{ website_url }}"
    dest: "/etc/nginx/sites-enabled/{{ website_url }}"
    state: link
  notify: Restart nginx
